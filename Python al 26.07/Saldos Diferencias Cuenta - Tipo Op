import csv
import pandas as pd

# Ruta del archivo de texto y el archivo CSV de salida
archivo_txt = r"C:\Users\fgonzalez\Downloads\901724_CRC03-1030-20240703.txt"
archivo_csv = r'E:\Usuarios\fgonzalez\OneDrive - bcp.gov.py\Escritorio\Vane\_Saldos.csv'
archivo_csv_agrupado = r'E:\Usuarios\fgonzalez\OneDrive - bcp.gov.py\Escritorio\Vane\_Saldos2_agrupado.csv'

# Función para insertar punto y coma en posiciones específicas en una cadena
def insertar_punto_y_coma(cadena, posiciones):
    lista_cadena = list(cadena)
    for pos in posiciones:
        lista_cadena.insert(pos, ';')
    return ''.join(lista_cadena)

# Función para concatenar 'Cuenta' y 'SubCuenta'
def concatenar_cuenta_subcuenta(row):
    return str(row['Cuenta']) + str(row['SubCuenta'])

# Lista con los nombres de las columnas
nombres_columnas = [
    'Tipo Formulario', 'Codigo Oficina', 'Tipo Operacion', 'Nro. Operacion', 'Codigo Moneda', 'Fecha Corte',
    'Fecha Vencimiento Prox. Cuota', 'Fecha Vencimiento Primera Cuota Impaga', 'Días Atraso', 'Cuenta Contable Saldo Capital', 'Saldo Capital',
    'Cuota Caída', 'Cuenta Interes a Devengar', 'Interes a Devengar', 'Cuenta IDNC', 'IDNC',
    'Cuenta IDC', 'IDC', 'Cuenta Interes en Suspenso', 'Interes en Suspenso', 'Cuenta Contingencia', 'Contingencia', 'Tasa Efectiva', 'Cuenta Previsiones', 'Prevision', 'Cuotas canceladas', 'Clasificacion', 'Numero de Registro', 'Cuenta', 'SubCuenta'
]

# Leer el archivo de texto y conviértelo a un archivo CSV con punto y coma en posiciones específicas
with open(archivo_txt, 'r', encoding='latin1') as txtfile, open(archivo_csv, 'w', newline='', encoding='latin1') as csvfile:
    writer = csv.writer(csvfile, delimiter=';')
    next(txtfile)  # Saltar la primera línea del archivo de texto
    writer.writerow(nombres_columnas)  # Escribir los nombres de las columnas en el archivo CSV

    for linea in txtfile:
        posiciones = [3, 8, 12, 73, 77, 86, 95, 104, 110, 129, 150, 171, 190, 211, 230, 251, 270, 291, 310, 331, 350, 371, 377, 396, 417, 421, 424]
        nueva_linea = insertar_punto_y_coma(linea.strip(), posiciones)
        lista_datos = nueva_linea.split(';')

        cuenta_contable_saldo_capital = lista_datos[9]  # Índice de la columna 'Cuenta Contable Saldo Capital'
        cuenta = cuenta_contable_saldo_capital[5:8]  # Extraer 'Cuenta'
        subcuenta = cuenta_contable_saldo_capital[8:12]  # Extraer 'SubCuenta'

        lista_datos.append(cuenta)
        lista_datos.append(subcuenta)
        writer.writerow(lista_datos)

# Leer el archivo CSV generado en un DataFrame de pandas
df = pd.read_csv(archivo_csv, delimiter=';', encoding='latin1')

# Convertir la columna 'Saldo Capital' e IDNC a numérica
df['Saldo Capital'] = pd.to_numeric(df['Saldo Capital'], errors='coerce')
df['IDNC'] = pd.to_numeric(df['IDNC'], errors='coerce')


# Aplicar la función de concatenación a lo largo de las filas del DataFrame
df['Cuenta + SubCuenta'] = df.apply(concatenar_cuenta_subcuenta, axis=1)

# Agrupar por 'Cuenta + SubCuenta' y sumar los valores de 'Saldo Capital' e 'IDNC'
df_agrupado = df.groupby('Cuenta + SubCuenta').agg({'Saldo Capital': 'sum', 'IDNC': 'sum'}).reset_index()

# Separar la columna 'Cuenta + SubCuenta' en 'Cuenta' y 'SubCuenta'
df_agrupado['Cuenta'] = df_agrupado['Cuenta + SubCuenta'].str[:3]
df_agrupado['SubCuenta'] = df_agrupado['Cuenta + SubCuenta'].str[3:]

# Reorganizar las columnas para que 'Cuenta' y 'SubCuenta' se añadan al final
df_agrupado = df_agrupado[['Cuenta + SubCuenta', 'Saldo Capital', 'IDNC', 'Cuenta', 'SubCuenta']]

# Guardar el resultado en un nuevo archivo CSV
df_agrupado.to_csv(archivo_csv_agrupado, index=False, sep=';')

# Leer el archivo CSV generado en un DataFrame de pandas
df = pd.read_csv(archivo_csv, delimiter=';', encoding='latin1')

# Convertir la columna 'Saldo Capital' e IDNC a numérica
df['Saldo Capital'] = pd.to_numeric(df['Saldo Capital'], errors='coerce')
df['IDNC'] = pd.to_numeric(df['IDNC'], errors='coerce')


# Aplicar la función de concatenación a lo largo de las filas del DataFrame
df['Cuenta + SubCuenta'] = df.apply(concatenar_cuenta_subcuenta, axis=1)

# Agrupar por 'Cuenta + SubCuenta' y sumar los valores de 'Saldo Capital' e 'IDNC'
df_agrupado = df.groupby('Cuenta + SubCuenta').agg({'Saldo Capital': 'sum', 'IDNC': 'sum'}).reset_index()

# Separar la columna 'Cuenta + SubCuenta' en 'Cuenta' y 'SubCuenta'
df_agrupado['Cuenta'] = df_agrupado['Cuenta + SubCuenta'].str[:3]
df_agrupado['SubCuenta'] = df_agrupado['Cuenta + SubCuenta'].str[3:]

# Reorganizar las columnas para que 'Cuenta' y 'SubCuenta' se añadan al final
df_agrupado = df_agrupado[['Cuenta + SubCuenta', 'Saldo Capital', 'IDNC', 'Cuenta', 'SubCuenta']]

# Guardar el resultado en un nuevo archivo CSV
df_agrupado.to_csv(archivo_csv_agrupado, index=False, sep=';')


# Comparar las columnas 'Tipo Operacion' y 'Cuenta' y generar un DataFrame con las discrepancias
df_discrepancias = df[df['Tipo Operacion'] != df['Cuenta']]

# Guardar el DataFrame de discrepancias en un nuevo archivo CSV
archivo_discrepancias = r'E:\Usuarios\fgonzalez\OneDrive - bcp.gov.py\Escritorio\Vane\discrepancias.csv'
df_discrepancias.to_csv(archivo_discrepancias, index=False, sep=';')

# Verificar el DataFrame de discrepancias
pd.set_option('display.max_columns', None)
print(df_discrepancias)

